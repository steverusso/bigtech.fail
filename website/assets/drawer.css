input[id^="toggle"] {
	display: none;
}
label[for^="toggle"] {
	cursor: pointer;
}
label[for^="toggle"]:before {
	content: "";
	background-color: rgba(34,34,34,0.6);
	position: fixed;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	opacity: 0;
	transition: 0.3s cubic-bezier(0.25,0.75,0.5,1);
	visibility: hidden;
	z-index: -1;
}
/* This is the toggle for opening / closing a side drawer. It's a label;
 * we want it to appear as a button. */
label[for^="toggle"]:not([for="toggleNav"]) {
	background: #03A9F4;
	border-radius: 50%;
	box-shadow: 3px 3px 10px 4px var(--shadowColor);
	padding: 0.85rem 0.9rem 0.9rem 0.85rem;
	position: fixed;
	bottom: 2rem;
	right: 2rem;
	z-index: 3;
}
label[for^="toggle"]:not([for="toggleNav"]):after {
	content: "";
	display: block;
	width: 28px;
	height: 28px;
}
input[id^="toggle"]:checked ~ aside {
	transform: translateX(0);
}
input[id^="toggle"]:checked ~ label:before {
	visibility: visible;
	opacity: 1;
	z-index: 5;
}
label[for^="toggle"]:not([for="toggleNav"]):before {
	width: calc(100% - var(--asideW));
	opacity: 0 !important;
}

aside {
	background: var(--bodyBg);
	border-left: var(--border1);
	box-shadow: 0 0 transparent, -15px 0 20px 0 var(--shadowColor);

	position: fixed;
	top: var(--navHeight);
	right: 0;

	width: var(--asideW);
	max-width: 100%;
	height: 100%;
	max-height: 100%;
	overflow-y: auto;
	overflow-x: hidden;

	transition: transform 0.35s;
	transform: translateX(110%);
	z-index: 2 !important;
}

aside > .content {
	max-height: calc(100vh - var(--navHeight));
	position: -webkit-sticky !important;
	position: sticky !important;
	overflow-y: auto;
	scrollbar-width: none;
}
aside > .content::-webkit-scrollbar {
	width: 0 !important;
}
aside > .content > header {
	background: var(--cardTitleBg);
	border-bottom: var(--border1);
	font-size: 1.3rem;
	padding: 1.25rem 0.5rem;
}
aside > .content > header:before {
	content: "";
	border-radius: 2px;
	margin: 0 1rem 0 0.5rem;
	width: 28px;
	height: 28px;
}
aside > .content > section {
	padding-bottom: 7rem;
}

.aside-parent {
	--asideW: 450px;
	position: relative;
	width: 100%;
}
.aside-parent > main {
	--maxW: 900px;
	max-width: var(--maxW) !important;
	margin: auto;
	padding: 0 1rem;
}

@media (min-width: 1250px) {
	label[for^="toggle"] {
		display: none;
	}

	aside {
		position: absolute;
		transform: translateX(0);
		top: 0;
		right: 0;
		z-index: 3;
		overflow: visible;
	}

	aside > .content {
		height: 100%;
		top: var(--navHeight);
	}

	.aside-parent {
		padding-right: calc(var(--asideW) + 1.25rem);
	}
}

.tags-drawer-parent {
	--asideW: 375px;
}
.tags-drawer-parent > main {
	--maxW: 1200px;
}
#toggleEvtTags + label:after {
	background: no-repeat center/100% url('/img/icons/tags-white.png');
}
aside.tags > .content > header:before {
	background: no-repeat center/100% url('/img/icons/tags.png');
}
aside.tags > .content > section > * {
	margin: 1rem;
}
